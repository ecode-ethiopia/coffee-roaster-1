FROM balenalib/%%BALENA_MACHINE_NAME%%-alpine-node:8-run

# Defines our working directory in container
RUN mkdir -p /usr/src/app/

# Install node modules, including i2c-bus and Raspberry Pi GPIO
RUN apk add --no-cache make gcc g++ python3 python python3-dev python-dev py3-pip py-pip musl-dev linux-headers curl && \
  JOBS=MAX npm install -g node-red@0.20.7 node-red-contrib-resinio node-red-admin node-red-contrib-redis@1.1.7 node-red-contrib-pid --production --silent && \
  pip3 install 'RPi.GPIO>=0.7.0' && \
  pip install 'RPi.GPIO>=0.7.0' && \
  pip3 install adafruit-circuitpython-max31855 && \
  npm cache clean --force && rm -rf /tmp/*

# Replace node-red GPIO file to fix Raspberry Pi 4 problem
# Required until this is fixed: https://github.com/balena-os/balena-raspberrypi/issues/378
RUN curl https://raw.githubusercontent.com/toby-coleman/node-red/master/packages/node_modules/%40node-red/nodes/core/hardware/36-rpi-gpio.js > /usr/local/lib/node_modules/node-red/node_modules/\@node-red/nodes/core/hardware/36-rpi-gpio.js

# Copy over Python source code and install
COPY ./src/. /usr/src

# This will copy all files in our root to the working directory in the container
WORKDIR /usr/src/app
COPY ./app ./
# Copy the flow file
COPY ./app/flows/flows.json /data/node-red/user/flows.json

# Start
CMD ["bash", "/usr/src/app/start.sh"]